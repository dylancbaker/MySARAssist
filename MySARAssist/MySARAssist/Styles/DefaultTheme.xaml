<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MySARAssist.Styles.DefaultTheme">

    
    
    <!-- form backgorund-->
    <Style x:Key="backgroundStyle" TargetType="VisualElement">
        <Setter Property="BackgroundColor" 
                Value="{StaticResource BackgroundColor_Light}" />
    </Style>

    <Style x:Key="backgroundStyleLight" TargetType="VisualElement">
        <Setter Property="BackgroundColor" Value="{StaticResource BackgroundColor_Light}" />
    </Style>

    <Style x:Key="backgroundStyleDark" TargetType="VisualElement">
        <Setter Property="BackgroundColor" 
                Value="{StaticResource BackgroundColor_Dark}" />
    </Style>


    <!-- labels-->
    <Style TargetType="Label" x:Key="labelStyleBasic">
        <!-- add any styling generic to labels-->
        <Setter Property="FontSize" Value="Large"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="labelStyle" BasedOn="{StaticResource labelStyleBasic}">

    </Style>
    <Style TargetType="Label" x:Key="labelStyleLightTheme" BasedOn="{StaticResource labelStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource ICABlue}"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="labelStyleDarkTheme" BasedOn="{StaticResource labelStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource LightYellow}"></Setter>
    </Style>


    <!-- Bold Labels-->
    <Style TargetType="Label" x:Key="labelStyleBold" BasedOn="{StaticResource labelStyle}">
        <Setter Property="FontAttributes"  Value="Bold"></Setter>
        <Setter Property="VerticalOptions" Value="EndAndExpand"></Setter>
    </Style>


    <!-- info labels -->
    <Style TargetType="Label" x:Key="infoLabelStyleBasic">
        <Setter Property="FontSize" Value="Large"></Setter>
        <Setter Property="FontAttributes" Value="Italic"></Setter>
        <Setter Property="HorizontalOptions" Value="FillAndExpand"></Setter>
        <Setter Property="Padding" Value="20"></Setter>
        <Setter Property="Margin" Value="20"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="infoLabelStyle" BasedOn="{StaticResource infoLabelStyleBasic}"></Style>

    <Style TargetType="Label" x:Key="infoLabelStyleLightTheme" BasedOn="{StaticResource infoLabelStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource darkerGrey}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource lightInfoWindowBackground}"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="infoLabelStyleDarkTheme" BasedOn="{StaticResource infoLabelStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource lightGrey}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource darkInfoWindowBackground}"></Setter>
    </Style>


    <!--- these frames are used for some lists to help seperate the items-->
    <Style TargetType="StackLayout" x:Key="listViewCellStyle">
        <Setter Property="Padding" Value="10"></Setter>
    </Style>

    <Style x:Key="listViewStyleBasic" TargetType="ListView">

    </Style>
    <Style x:Key="listViewStyle" TargetType="ListView" BasedOn="{StaticResource listViewStyleBasic}">

    </Style>
    <Style x:Key="listViewStyleLight" TargetType="ListView" BasedOn="{StaticResource listViewStyleBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource BackgroundColor_Light}"></Setter>
    </Style>
    <Style x:Key="listViewStyleDark" TargetType="ListView" BasedOn="{StaticResource listViewStyleBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource BackgroundColor_Dark}"></Setter>
    </Style>


    <Style TargetType="Frame" x:Key="listFrameStyleBasic">
        <Setter Property="HasShadow" Value="True"></Setter>
        <Setter Property="Margin" Value="0, 0, 0, 10"></Setter>
    </Style>
    <Style TargetType="Frame" x:Key="listFrameStyle" BasedOn="{StaticResource listFrameStyleBasic}">

    </Style>
    <Style TargetType="Frame" x:Key="listFrameStyleLightTheme" BasedOn="{StaticResource listFrameStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource darkGrey}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource BackgroundColor_Light}"></Setter>
    </Style>
    <Style TargetType="Frame" x:Key="listFrameStyleDarkTheme" BasedOn="{StaticResource listFrameStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource lightGrey}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource BackgroundColor_Dark}"></Setter>
    </Style>




    <Style TargetType="Frame" x:Key="listFrameSelectedStyle" BasedOn="{StaticResource listFrameStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource Primary}"></Setter>
    </Style>
    <Style TargetType="Frame" x:Key="listFrameSelectedLightStyle" BasedOn="{StaticResource listFrameStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource Primary}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource veryLightRed}"></Setter>
    </Style>
    <Style TargetType="Frame" x:Key="listFrameSelectedDarkStyle" BasedOn="{StaticResource listFrameStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource Primary}"></Setter>

        <Setter Property="BackgroundColor" Value="{StaticResource veryDarkRed}"></Setter>
    </Style>


    <Style TargetType="Frame" x:Key="listFrameNotSelectedStyle" BasedOn="{StaticResource listFrameStyleBasic}">
    </Style>
    <Style TargetType="Frame" x:Key="listFrameNotSelectedLightStyle" BasedOn="{StaticResource listFrameStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource darkGrey}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource lightGrey}"></Setter>
    </Style>
    <Style TargetType="Frame" x:Key="listFrameNotSelectedDarkStyle" BasedOn="{StaticResource listFrameStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource lightGrey}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource BackgroundColor_Dark}"></Setter>
    </Style>



    <!-- Buttons-->
    <Style x:Key="buttonStyleBasic" TargetType="Button">
        <Setter Property="BorderWidth" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Padding" Value="5, 10, 5, 10"></Setter>
    </Style>
    <Style x:Key="buttonStyle" TargetType="Button" BasedOn="{StaticResource buttonStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource mediumGrey}"></Setter>
    </Style>
    <Style x:Key="buttonStyleLightTheme" TargetType="Button" BasedOn="{StaticResource buttonStyleBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource lightGrey}"></Setter>
        <Setter Property="TextColor" Value="{StaticResource darkGrey}"></Setter>
        <Setter Property="BorderColor" Value="{StaticResource darkGrey}"></Setter>
    </Style>
    <Style x:Key="buttonStyleDarkTheme" TargetType="Button" BasedOn="{StaticResource buttonStyleBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource darkGrey}"></Setter>
        <Setter Property="TextColor" Value="{StaticResource lightGrey}"></Setter>
        <Setter Property="BorderColor" Value="{StaticResource lightGrey}"></Setter>
    </Style>



    <!-- LG Buttons-->
    <Style x:Key="lgButtonStyleBasic" TargetType="Button">
        <Setter Property="BorderWidth" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="10"></Setter>
        <Setter Property="FontSize" Value="Large"></Setter>
        <Setter Property="Padding" Value="10, 15, 10, 15"></Setter>
    </Style>
    <Style x:Key="lgButtonStyle" TargetType="Button" BasedOn="{StaticResource lgButtonStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource mediumGrey}"></Setter>
    </Style>
    <Style x:Key="lgButtonStyleLightTheme" TargetType="Button" BasedOn="{StaticResource lgButtonStyleBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource ICAYellow}"></Setter>
        <Setter Property="TextColor" Value="{StaticResource black}"></Setter>
        <Setter Property="BorderColor" Value="{StaticResource ICAYellow}"></Setter>
    </Style>
    <Style x:Key="lgButtonStyleDarkTheme" TargetType="Button" BasedOn="{StaticResource lgButtonStyleBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource DarkYellow}"></Setter>
        <Setter Property="TextColor" Value="{StaticResource black}"></Setter>
        <Setter Property="BorderColor" Value="{StaticResource DarkYellow}"></Setter>
    </Style>


    <!-- XLG Buttons-->
    <Style x:Key="xlgButtonStyleBasic" TargetType="Button">
        <Setter Property="BorderWidth" Value="2"></Setter>
        <Setter Property="CornerRadius" Value="10"></Setter>
        <Setter Property="FontSize" Value="Title"></Setter>
        <Setter Property="Margin" Value="0, 10, 0, 10"></Setter>
    
        <Setter Property="Padding" Value="10, 15, 10, 15"></Setter>
    </Style>
    <Style x:Key="xlgButtonStyle" TargetType="Button" BasedOn="{StaticResource xlgButtonStyleBasic}">
        <Setter Property="BorderColor" Value="{StaticResource mediumGrey}"></Setter>
    </Style>
    <Style x:Key="xlgButtonStyleLightTheme" TargetType="Button" BasedOn="{StaticResource xlgButtonStyleBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource ICAYellow}"></Setter>
        <Setter Property="TextColor" Value="{StaticResource black}"></Setter>
        <Setter Property="BorderColor" Value="{StaticResource ICAYellow}"></Setter>
    </Style>
    <Style x:Key="xlgButtonStyleDarkTheme" TargetType="Button" BasedOn="{StaticResource xlgButtonStyleBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource DarkYellow}"></Setter>
        <Setter Property="TextColor" Value="{StaticResource black}"></Setter>
        <Setter Property="BorderColor" Value="{StaticResource DarkYellow}"></Setter>
    </Style>



    <Style x:Key="buttonStyleRed" TargetType="Button" BasedOn="{StaticResource buttonStyleBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource darkRedButtonColour}"></Setter>
        <Setter Property="TextColor" Value="{StaticResource white}"></Setter>
        <Setter Property="BorderColor" Value="{StaticResource white}"></Setter>

    </Style>
    
    <Style x:Key="buttonStyleTextRed" TargetType="Button">
        <Setter Property="TextColor" Value="{StaticResource darkRedButtonColour}"></Setter>

    </Style>




    <!-- Buttons-->
    <Style x:Key="upDownButtonBasic" TargetType="Button">
        <Setter Property="BorderWidth" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="0"></Setter>
        <Setter Property="FontSize" Value="Large"></Setter>
        <Setter Property="MinimumWidthRequest" Value="30"></Setter>
    </Style>
    <Style x:Key="upDownButton" TargetType="Button" BasedOn="{StaticResource upDownButtonBasic}">
        <Setter Property="BorderColor" Value="{StaticResource mediumGrey}"></Setter>
    </Style>
    <Style x:Key="upDownButtonLightTheme" TargetType="Button" BasedOn="{StaticResource upDownButtonBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource darkerGrey}"></Setter>
        <Setter Property="TextColor" Value="{StaticResource white}"></Setter>
        <Setter Property="BorderColor" Value="{StaticResource white}"></Setter>
    </Style>
    <Style x:Key="upDownButtonDarkTheme" TargetType="Button" BasedOn="{StaticResource upDownButtonBasic}">
        <Setter Property="BackgroundColor" Value="{StaticResource darkGrey}"></Setter>
        <Setter Property="TextColor" Value="{StaticResource lightGrey}"></Setter>
        <Setter Property="BorderColor" Value="{StaticResource lightGrey}"></Setter>
    </Style>


    <!-- Entry-->
    <Style TargetType="Entry" x:Key="entryStyleBasic">
    </Style>
    <Style TargetType="Entry" x:Key="entryStyle" BasedOn="{StaticResource entryStyleBasic}">

    </Style>
    <Style TargetType="Entry" x:Key="entryStyleLightTheme" BasedOn="{StaticResource entryStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource darkGrey}"></Setter>
    </Style>
    <Style TargetType="Entry" x:Key="entryStyleDarkTheme" BasedOn="{StaticResource entryStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource white}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource darkerGrey}"></Setter>
        <Setter Property="PlaceholderColor" Value="{StaticResource lightGrey}"></Setter>
    </Style>


    <!-- Entry-->
    <Style TargetType="Editor" x:Key="editorStyleBasic">
    </Style>
    <Style TargetType="Editor" x:Key="editorStyle" BasedOn="{StaticResource editorStyleBasic}">

    </Style>
    <Style TargetType="Editor" x:Key="editorStyleLightTheme" BasedOn="{StaticResource editorStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource darkGrey}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource lightGrey}"></Setter>
    </Style>
    <Style TargetType="Editor" x:Key="editorStyleDarkTheme" BasedOn="{StaticResource editorStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource white}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource darkerGrey}"></Setter>
        <Setter Property="PlaceholderColor" Value="{StaticResource lightGrey}"></Setter>
    </Style>


    <!-- Picker -->
    <Style TargetType="Picker" x:Key="pickerStyleBasic"></Style>
    <Style TargetType="Picker" x:Key="pickerStyle" BasedOn="{StaticResource pickerStyleBasic}">
    </Style>
    <Style TargetType="Picker" x:Key="pickerStyleLightTheme" BasedOn="{StaticResource pickerStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource darkGrey}"></Setter>
    </Style>
    <Style TargetType="Picker" x:Key="pickerStyleDarkTheme" BasedOn="{StaticResource pickerStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource white}"></Setter>
        <Setter Property="BackgroundColor" Value="{StaticResource darkerGrey}"></Setter>
        <Setter Property="TitleColor" Value="{StaticResource lightGrey}"></Setter>
    </Style>


    <!-- title label-->
    <Style TargetType="Label" x:Key="titleLabelStyleBasic">
        <Setter Property="FontSize" Value="Title"></Setter>
        <Setter Property="HorizontalTextAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="15"></Setter>
        <Setter Property="HorizontalOptions" Value="FillAndExpand"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="titleLabelStyle" BasedOn="{StaticResource titleLabelStyleBasic}">

    </Style>
    <Style TargetType="Label" x:Key="titleLabelStyleLightTheme" BasedOn="{StaticResource titleLabelStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource darkGrey}"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="titleLabelStyleDarkTheme" BasedOn="{StaticResource titleLabelStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource lightGrey}"></Setter>
    </Style>

    <!-- subtitle label-->
    <Style TargetType="Label" x:Key="subtitleLabelStyleBasic">
        <Setter Property="FontSize" Value="Subtitle"></Setter>
        <Setter Property="Margin" Value="0, 0, 0, 10"></Setter>
        <Setter Property="FontAttributes" Value="Bold"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="subtitleLabelStyle" BasedOn="{StaticResource subtitleLabelStyleBasic}">

    </Style>
    <Style TargetType="Label" x:Key="subtitleLabelStyleLightTheme" BasedOn="{StaticResource subtitleLabelStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource darkGrey}"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="subtitleLabelStyleDarkTheme" BasedOn="{StaticResource subtitleLabelStyleBasic}">
        <Setter Property="TextColor" Value="{StaticResource lightGrey}"></Setter>
    </Style>




    <!--- Flyout menu stuff-->


            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource ICABlue}" />
                <Setter Property="Shell.ForegroundColor" Value="{StaticResource ICAYellow}" />

                <Setter Property="Shell.TitleColor" Value="{StaticResource white}" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="{StaticResource BackgroundColor_Dark}" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource ICABlue}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="{StaticResource ICAYellow}"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="{StaticResource BackgroundColor_Dark}"/>
                <Setter Property="Shell.TabBarTitleColor" Value="{StaticResource ICAYellow}"/>
             
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />
            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource BackgroundColor_Dark}"></Setter>
            </Style>
            
            <Style x:Key="flyoutItemLayoutStyle"  Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
            </Style>
            <Style x:Key="flyoutItemLayoutStyleLight" Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True" BasedOn="{StaticResource flyoutItemLayoutStyle}">
                <Setter Property="BackgroundColor" Value="LightBlue"></Setter>
                <Setter Property="Shell.FlyoutBackgroundColor" Value="{StaticResource BackgroundColor_Light}"></Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource black }" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource ICAYellow}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <Style x:Key="flyoutItemLayoutStyleDark" Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True" BasedOn="{StaticResource flyoutItemLayoutStyle}">
                <Setter Property="BackgroundColor" Value="Orange"></Setter>
                <Setter Property="Shell.FlyoutBackgroundColor" Value="{StaticResource mediumGrey}"></Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource white }" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource darkGrey}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource white }" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>



   

</ResourceDictionary>